{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FaUser, FaLock, FaEnvelope, FaCalendar, FaHashtag, FaComment } from \"react-icons/fa\";\nconst sizeStyles = {\n    small: { width: \"150px\", height: \"30px\", padding: \"5px 30px\" },\n    medium: { width: \"250px\", height: \"40px\", padding: \"8px 35px\" },\n    large: { width: \"350px\", height: \"50px\", padding: \"10px 40px\" },\n};\nconst getIcon = (type) => {\n    const iconStyle = {\n        position: \"absolute\",\n        left: \"12px\",\n        color: \"#ccc\",\n        fontSize: \"18px\",\n    };\n    switch (type) {\n        case \"text\":\n            return _jsx(FaUser, { style: iconStyle });\n        case \"password\":\n            return _jsx(FaLock, { style: iconStyle });\n        case \"email\":\n            return _jsx(FaEnvelope, { style: iconStyle });\n        case \"number\":\n            return _jsx(FaHashtag, { style: iconStyle });\n        case \"date\":\n            return _jsx(FaCalendar, { style: iconStyle });\n        case \"textarea\":\n            return _jsx(FaComment, { style: iconStyle });\n        default:\n            return null;\n    }\n};\nconst Input = ({ type, label, placeholder, value, options, checked, size = \"medium\", width, height, onChange }) => {\n    const defaultSize = sizeStyles[size];\n    const inputStyles = {\n        fontSize: \"16px\",\n        border: \"1.5px solid #ccc\",\n        borderRadius: \"8px\",\n        outline: \"none\",\n        background: \"white\",\n        width: width || defaultSize.width,\n        height: height || defaultSize.height,\n        padding: defaultSize.padding,\n    };\n    return (_jsxs(\"div\", { style: { display: \"flex\", flexDirection: \"column\", marginBottom: \"15px\", position: \"relative\", maxWidth: \"100%\" }, children: [label && _jsx(\"label\", { style: { fontSize: \"14px\", fontWeight: 600, marginBottom: \"5px\", color: \"#333\" }, children: label }), _jsxs(\"div\", { style: { display: \"flex\", alignItems: \"center\", position: \"relative\", width: \"100%\" }, children: [getIcon(type), type === \"textarea\" ? (_jsx(\"textarea\", { style: inputStyles, placeholder: placeholder, value: value, onChange: onChange })) : type === \"select\" && options ? (_jsx(\"select\", { style: inputStyles, value: value, onChange: onChange, children: options.map((option, index) => (_jsx(\"option\", { value: option, children: option }, index))) })) : (_jsx(\"input\", { style: inputStyles, type: type, placeholder: placeholder, value: value, checked: checked, onChange: onChange }))] })] }));\n};\nexport default Input;\n","references":["/Users/chethannv/Downloads/Libraries/react-ui-library/node_modules/@types/react/index.d.ts","/Users/chethannv/Downloads/Libraries/react-ui-library/node_modules/react-icons/fa/index.d.ts"],"dts":{"name":"/Users/chethannv/Downloads/Libraries/react-ui-library/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Input.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\ninterface InputProps {\n    type: \"text\" | \"password\" | \"email\" | \"number\" | \"date\" | \"checkbox\" | \"radio\" | \"textarea\" | \"select\";\n    label?: string;\n    placeholder?: string;\n    value?: string | number;\n    options?: string[];\n    checked?: boolean;\n    size?: \"small\" | \"medium\" | \"large\";\n    width?: string;\n    height?: string;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void;\n}\ndeclare const Input: React.FC<InputProps>;\nexport default Input;\n"}}
